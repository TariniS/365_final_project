User stories/User requirements:

- As a user, I want to be able to create a profile on the platform and add my personal information, such as my name, email.
- As a user, I want to be able to upload a new recipe with the recipe name, ingredients, instructions.
- As a user, I want to be able to search for recipes based on specific ingredients or cuisine types.
- As a user, I want to be able to view a recipe and see its rating and comments from other users.
- As a user, I want to be able to rate a recipe and leave comments.
- As a user, I want to be able to filter a recipe by specific tags based on nutritional needs (gluten free, dairy free, vegan, etc)
- As a user, I want to be able to sort for recipes based on the ratings their recieved
- As a user, I want to be able to edit a recipe. 


Endpoints:

POST /users: 
  - This endpoint allows a user to create a new profile on the platform using an emailId and password.
  - Parameters: 
    - name: string (required)
   
POST /recipes: 
  - This endpoint allows a user to upload a new recipe to the platform. A user can have multiple different recipe versions for the same dish. 
  - Parameters:
    - user_id: int (required)
    - recipeJSON: Class_BaseModel (required)
   - RecipeJSON consists of recipe_name, total_time, servings, spice_level, cooking_level, recipe_description, ingredients, and instructions
        where ingredients and instructions are another class consisting of attributes specific to them.
   
GET /recipes: 
  - This endpoint returns a list of recipes. A user can further search for a recipe by specific tags (quick, vegan, dairy-free, etc), sort by
    total time, spice level, cooking level, and servings. It also has a limit and offset query used for pagination.
  - Parameters:
    - tags: string (optional)
    - offset: 0
    - limit: 50
    - sort: sort.total_time, sort.spice_level, sort.cooking_level, sort.servings (optional)

GET /findrecipes/{ingredient_list}:
  - This endpoint allows a user to find for recipes based on ingredients they have available on hand and returns
    the recipes in order of highest ingredient match
  - Parameters:
    - ingredients: list of strings (required)
    
GET /recipes/{id}: 
  - This endpoint allows a user to view a recipe based on an id and see the information pertaining to it (see docstring)
  - Parameters:
    - recipe_id: int (required)
  
POST /recipes/{id}/rating: 
  - This endpoint allows a user to rate a recipe and leave comments.
  - Parameters:
    - id: string (required)
    - rating: float (required)
    - comment: string (optional)


Detailed descriptions of edge cases and transaction flows:

- If the user tries to create a profile with an email that already exists, the system should return an error message indicating that the email is already in use.
- If a user tries to upload a recipe with incomplete information, such as missing ingredients or instructions, the system should return an error message indicating that the recipe is incomplete.
- If a user tries to search for recipes with an invalid search query, such as a non-existent ingredient, the system should return an error message indicating that the search query is invalid.
- If a user tries to rate a recipe without providing a rating value, the system should return an error message indicating that the rating value is required.
- If a user tries to rate a recipe multiple times, the system should only update the rating for that recipe with the most recent rating provided by the user.
- If a user tries to create a recipe but there is already an exisiting recipe with the same name in the database. 
